#!/usr/bin/php

<?php

/*
Dump all passwords from www.mysql-password.com
* 
* Into a csv file
* 
* REQUIRE: php, php-curl
*   
* sudo apt install php php-curl
* 
  * Run me: 
  * 
  * chmod +X passCrap_csv
  * ./passCrap_csv
  * 
  * Or: 
  * 
  * php <(curl -s https://raw.githubusercontent.com/webdev23/passCrap/master/passCrap_csv)
  * 
  * nk @ https://github.com/webdev23/passCrap
  * ponyhacks.com 2017
*/  
//~ error_reporting(0);

file_put_contents("multipass.csv", "", FILE_APPEND | LOCK_EX);

$csv = fopen("multipass.csv", "a");
 
//~ Start page number
$baseN = 1;
$base = "http://www.mysql-password.com/database/".$baseN++;

echo "\n\033[31m Warning: This tool is going to construct a database \n of 2.420.000.000 passwords from www.mysql-password.com/database.
This database will weight 230 Gigabytes! 
It can takes weeks and will burn a lot.\n \033[0m
Continue? [Y/n] ";

 usleep(3000000);
 
$stdin = fopen('php://stdin', 'r');
$response = rtrim(fgets(STDIN));

 if ($response == 'y' || 'Y') {


echo "\n\033[31m This tool use multi-threading.\033[0m ";

// Max 14 (?)
$cpu = "12";
  
    for ($page=1;$page<=242240;++$page){
        
        
        for ($i=0; $i<$cpu; $i++) {
            
            // open 8 processes
            for ($j=0; $j<$cpu; $j++) {
                $cur = "./sub ".($page + $j);
                echo "\nStarted sub processus: ".($page + $j);
                 //~ usleep(10000000);
                $pipe[$j] = popen("$cur","w");
            }
        
            // wait for them to finish
            for ($j=0; $j<$cpu; ++$j) {
                pclose($pipe[$j]);
                echo system("for i in `echo *.csv`; do cat $i >>  output.csv && rm $i; done");
            }
        }
            
            //~ $pipe[$page] = popen("$cur","w");
             //~ usleep(3000000);
             
            echo $pipe[$page];
            //~ pclose(popen("$cur &","r"));
        };
};  

 
